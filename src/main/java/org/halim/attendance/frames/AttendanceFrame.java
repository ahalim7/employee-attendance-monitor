/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.halim.attendance.frames;

import java.awt.Point;
import org.halim.utils.TimeMainpulator;
import java.util.Calendar;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import org.halim.Model.Employee;
import org.halim.controller.EmployeeController;
import org.halim.controller.EmployeeWorkingHoursController;
import org.halim.utils.Screen;

/**
 *
 * @author ABDELHALIM
 */
public class AttendanceFrame extends javax.swing.JFrame {

    int employee_ID;
    static int counter = 0;
    static String currentTime;
    Timer timer = null;
    TimerTask task = null;
    static boolean state;
    static boolean arrived = false;
    HistoryFrame historyFrame;

    /**
     * Creates new form Attendance
     *
     * @param employee_ID
     */
    public AttendanceFrame(int employee_ID) {
        initComponents();
        this.employee_ID = employee_ID;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jPanel1 = new javax.swing.JPanel();
        stopButton = new javax.swing.JButton();
        elapsedTime = new javax.swing.JLabel();
        depatureTimeValue = new javax.swing.JLabel();
        submitButton = new javax.swing.JButton();
        start_pause_button = new javax.swing.JToggleButton();
        arrivalTime = new javax.swing.JLabel();
        depatureTime = new javax.swing.JLabel();
        workingHours = new javax.swing.JLabel();
        arrivalTimeValue = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        employeeID = new javax.swing.JLabel();
        historyButton = new javax.swing.JButton();

        jMenu1.setText("jMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Attendance Dashboard");
        setName("attendanceFrame"); // NOI18N
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        stopButton.setIcon(new javax.swing.ImageIcon("C:\\Users\\ABDELHALIM\\Documents\\NetBeansProjects\\attendance\\resources\\images\\stop.png")); // NOI18N
        stopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonActionPerformed(evt);
            }
        });

        elapsedTime.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        elapsedTime.setText("Working Hours :");

        depatureTimeValue.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        depatureTimeValue.setText("00 : 00 : 00");

        submitButton.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        submitButton.setText("Submit Time");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        start_pause_button.setBackground(new java.awt.Color(255, 255, 255));
        start_pause_button.setIcon(new javax.swing.ImageIcon("C:\\Users\\ABDELHALIM\\Documents\\NetBeansProjects\\attendance\\resources\\images\\start.png")); // NOI18N
        start_pause_button.setName("start_pause_button"); // NOI18N
        start_pause_button.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                start_pause_buttonItemStateChanged(evt);
            }
        });

        arrivalTime.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        arrivalTime.setText("Arrival Time :");

        depatureTime.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        depatureTime.setText("Departure time :");
        depatureTime.setToolTipText("");

        workingHours.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        workingHours.setText("00 : 00 : 00");

        arrivalTimeValue.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        arrivalTimeValue.setText("00 : 00 : 00");
        arrivalTimeValue.setToolTipText("");

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel1.setText("Good Morning, ");
        jLabel1.setToolTipText("");

        employeeID.setToolTipText("");

        historyButton.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        historyButton.setText("Attendance History ");
        historyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                historyButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(start_pause_button, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(stopButton, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(employeeID)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 125, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(elapsedTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(depatureTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(arrivalTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(depatureTimeValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(workingHours, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(arrivalTimeValue, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(submitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(historyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(workingHours)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(elapsedTime)
                                    .addComponent(jLabel1)
                                    .addComponent(employeeID))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(arrivalTime)
                                    .addComponent(arrivalTimeValue))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(depatureTimeValue)
                            .addComponent(depatureTime))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(submitButton, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                            .addComponent(historyButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 45, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(start_pause_button, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(stopButton, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void start_pause_buttonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_start_pause_buttonItemStateChanged

        if (start_pause_button.isSelected()) {
            //start working 
            start_pause_button.setIcon(new ImageIcon("resources\\images\\pause.png"));
            state = true;
            if (!arrived) {
                arrivalTimeValue.setText(displayTime());
                arrived = true;
                timer = new Timer();
                task = new TimerTask() {
                    @Override
                    public void run() {
                        if (state) {
                            currentTime = TimeMainpulator.getTime(counter);
                            workingHours.setText(currentTime);
                            counter++;
                        }
                    }
                };
                timer.schedule(task, 1, 1000);
            }
        } else {
            //pause working
            start_pause_button.setIcon(new ImageIcon("resources\\images\\start.png"));
            state = false;
        }
    }//GEN-LAST:event_start_pause_buttonItemStateChanged

    private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButtonActionPerformed
        // TODO add your handling code here:
        int optionSelected = JOptionPane.showConfirmDialog(this, "Woking Hours will be reset, Are you sure about that ?", "Reset Working Hours", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
        if (optionSelected == JOptionPane.YES_OPTION) {
            workingHours.setText("00 : 00 : 00");
            counter = 0;
            start_pause_button.setSelected(false);
            arrivalTimeValue.setText("00 : 00 : 00");
            arrived = false;
        }
    }//GEN-LAST:event_stopButtonActionPerformed

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        // TODO add your handling code here:
        start_pause_button.setSelected(false);
        depatureTimeValue.setText(displayTime());
        int optionSelected = JOptionPane.showConfirmDialog(this, "Day of work details : \n"
                + "Arrival Time : " + arrivalTimeValue.getText() + "\n"
                + "Depature Time : " + depatureTimeValue.getText() + "\n"
                + "Working Hours : " + workingHours.getText() + "\n"
                + "Are you sure for submitting your information ?", "Submit My Working Hours",
                JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
        if (optionSelected == JOptionPane.YES_OPTION) {
            String[] totalWorkingHours = workingHours.getText().split(" : ");

            //DAO
            EmployeeWorkingHoursController employeeController = new EmployeeWorkingHoursController();
            Employee employee = new Employee(employee_ID,
                    getDate(), Integer.parseInt(totalWorkingHours[0]),
                    Integer.parseInt(totalWorkingHours[1]), Integer.parseInt(totalWorkingHours[2]),
                    arrivalTimeValue.getText().trim(), depatureTimeValue.getText().trim());
            employeeController.submitWorkingHours(employee);

            //close application
            this.dispose();
            System.exit(0);

        } else if (optionSelected == JOptionPane.NO_OPTION) {
            start_pause_button.setSelected(true);
            depatureTimeValue.setText("00 : 00 : 00");
        }
    }//GEN-LAST:event_submitButtonActionPerformed

    private void historyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_historyButtonActionPerformed
        // TODO add your handling code here:
        if (historyFrame == null) {
            historyFrame = new HistoryFrame(employee_ID);
            historyFrame.setVisible(true);
        }
    }//GEN-LAST:event_historyButtonActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        this.setLocation(new Point((Screen.getScreenWidth(50) - this.getSize().width / 2),
                (Screen.getScreenHeight(50)) - this.getSize().height / 2));
        employeeID.setText(new EmployeeController().getEmployeeName(employee_ID));
    }//GEN-LAST:event_formWindowOpened

    private String displayTime() {
        Calendar calendar = Calendar.getInstance();
        return "" + calendar.get(Calendar.HOUR) + " : "
                + calendar.get(Calendar.MINUTE) + " : " + calendar.get(Calendar.SECOND);
    }

    private String getDate() {
        Calendar calendar = Calendar.getInstance();
        return calendar.getTime().toString();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel arrivalTime;
    private javax.swing.JLabel arrivalTimeValue;
    private javax.swing.JLabel depatureTime;
    private javax.swing.JLabel depatureTimeValue;
    private javax.swing.JLabel elapsedTime;
    private javax.swing.JLabel employeeID;
    private javax.swing.JButton historyButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JToggleButton start_pause_button;
    private javax.swing.JButton stopButton;
    private javax.swing.JButton submitButton;
    private javax.swing.JLabel workingHours;
    // End of variables declaration//GEN-END:variables
}
